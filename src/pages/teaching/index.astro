---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

const allTeaching = await getCollection('teaching');

// Sort by term (most recent first - approximate by reverse alphabetical)
const teaching = allTeaching.sort((a, b) => b.data.term.localeCompare(a.data.term));

// Extract filter options
const institutions = Array.from(new Set(teaching.map((t) => t.data.institution))).sort();

const levels = Array.from(new Set(teaching.map((t) => t.data.level).filter(Boolean))).sort();

// Apply filters
const selectedInstitution = Astro.url.searchParams.get('institution') || '';
const selectedLevel = Astro.url.searchParams.get('level') || '';

const filteredTeaching = teaching.filter((course) => {
  if (selectedInstitution && course.data.institution !== selectedInstitution) return false;
  if (selectedLevel && course.data.level !== selectedLevel) return false;
  return true;
});

const pageTitle = 'Teaching';
const pageDescription =
  'Courses, workshops, and teaching experience in physics, quantum computing, and computational methods.';
---

<BaseLayout title={pageTitle} description={pageDescription}>
  <h1>Teaching Experience</h1>
  <p class="mt-2 text-gray-700 dark:text-gray-300">
    {pageDescription}
  </p>

  <p class="mt-2 text-sm text-gray-600 dark:text-gray-400" aria-live="polite">
    Showing {filteredTeaching.length} of {teaching.length} courses
  </p>

  <!-- Filters -->
  <form method="get" role="search" class="mt-6">
    <fieldset class="grid gap-3 sm:grid-cols-2">
      <legend class="sr-only">Filter courses</legend>
      <label class="block">
        <span class="block text-sm mb-1">Institution</span>
        <select
          name="institution"
          class="w-full border rounded px-2 py-1 dark:bg-gray-800 dark:border-gray-600"
        >
          <option value="">All institutions</option>
          {
            institutions.map((i) => (
              <option value={i} selected={selectedInstitution === i}>
                {i}
              </option>
            ))
          }
        </select>
      </label>

      <label class="block">
        <span class="block text-sm mb-1">Level</span>
        <select
          name="level"
          class="w-full border rounded px-2 py-1 dark:bg-gray-800 dark:border-gray-600"
        >
          <option value="">All levels</option>
          {
            levels.map((l) => (
              <option value={l} selected={selectedLevel === l}>
                {l}
              </option>
            ))
          }
        </select>
      </label>

      <div class="sm:col-span-2 flex gap-2">
        <button
          type="submit"
          class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500"
        >
          Apply Filters
        </button>
        <a
          href="/teaching/"
          class="px-4 py-2 bg-gray-200 dark:bg-gray-700 rounded hover:bg-gray-300 dark:hover:bg-gray-600 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500"
        >
          Reset
        </a>
      </div>
    </fieldset>
  </form>

  <!-- Teaching List -->
  <ul class="mt-8 space-y-6">
    {
      filteredTeaching.map(async (course) => {
        const { Content } = await course.render();
        return (
          <li class="border-l-4 border-green-500 pl-4">
            <h2 class="text-xl font-semibold">{course.data.title}</h2>
            <p class="mt-1 text-sm text-gray-600 dark:text-gray-400">
              {course.data.institution} · {course.data.term}
              {course.data.role && <> · {course.data.role}</>}
              {course.data.level && (
                <span class="ml-2 inline-flex items-center rounded-full bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300 px-2 py-0.5 text-xs">
                  {course.data.level}
                </span>
              )}
            </p>

            <div class="mt-3 prose dark:prose-invert max-w-none">
              <Content />
            </div>

            <div class="mt-4 flex flex-wrap gap-3">
              {course.data.syllabus && (
                <a
                  href={course.data.syllabus}
                  class="inline-flex items-center px-3 py-1 bg-gray-100 dark:bg-gray-800 rounded hover:bg-gray-200 dark:hover:bg-gray-700 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <svg
                    class="w-4 h-4 mr-1"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                    aria-hidden="true"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                    />
                  </svg>
                  Syllabus
                </a>
              )}
              {course.data.materials && (
                <a
                  href={course.data.materials}
                  class="inline-flex items-center px-3 py-1 bg-gray-100 dark:bg-gray-800 rounded hover:bg-gray-200 dark:hover:bg-gray-700 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <svg
                    class="w-4 h-4 mr-1"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                    aria-hidden="true"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
                    />
                  </svg>
                  Materials
                </a>
              )}
            </div>
          </li>
        );
      })
    }
  </ul>

  {
    filteredTeaching.length === 0 && (
      <p class="mt-8 text-center text-gray-600 dark:text-gray-400">
        No courses match the selected filters.
      </p>
    )
  }

  <script>
    // Auto-submit form on filter change
    const form = document.querySelector('form[role="search"]') as HTMLFormElement | null;
    if (form) {
      const selects = form.querySelectorAll('select');
      selects.forEach((select) => {
        select.addEventListener('change', () => {
          if (typeof form.requestSubmit === 'function') {
            form.requestSubmit();
          } else {
            form.submit();
          }
        });
      });
    }
  </script>
</BaseLayout>
